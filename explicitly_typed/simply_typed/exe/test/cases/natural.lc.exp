zero
  : (* -> *) -> * -> *
  = s : * -> * . z : * . z ;
one
  : (* -> *) -> * -> *
  = s : * -> * . z : * . s z ;
two
  : (* -> *) -> * -> *
  = s : * -> * . z : * . s (s z) ;
three
  : (* -> *) -> * -> *
  = s : * -> * . z : * . s (s (s z)) ;
four
  : (* -> *) -> * -> *
  = s : * -> * . z : * . s (s (s (s z))) ;
eight
  : (* -> *) -> * -> *
  = s : * -> * . z : * . s (s (s (s (s (s (s (s z))))))) ;
succ
  : ((* -> *) -> * -> *) -> (* -> *) -> * -> *
  = n : (* -> *) -> * -> * . s : * -> * . z : * . s (n s z) ;
add
  : ((* -> *) -> * -> *) -> ((* -> *) -> * -> *) -> (* -> *) -> * -> *
  = m : (* -> *) -> * -> * . n : (* -> *) -> * -> * . s : * -> * . z : * . m s (n s z) ;
mul
  : ((* -> *) -> * -> *) -> ((* -> *) -> * -> *) -> (* -> *) -> * -> *
  = m : (* -> *) -> * -> * . n : (* -> *) -> * -> * . s : * -> * . m (n s) ;
if_zero
  : ((* -> *) -> * -> *) -> ((* -> *) -> * -> *) -> ((* -> *) -> * -> *) -> (* -> *) -> * -> *
  = m : (* -> *) -> * -> * . n : (* -> *) -> * -> * . o : (* -> *) -> * -> * . s : * -> * . z : * . m (x : * . o s z) (n s z) ;
succ one
  : (* -> *) -> * -> *
  = s : * -> * . z : * . s (s z) ;
add one zero
  : (* -> *) -> * -> *
  = s : * -> * . z : * . s z ;
add one two
  : (* -> *) -> * -> *
  = s : * -> * . z : * . s (s (s z)) ;
mul two two
  : (* -> *) -> * -> *
  = s : * -> * . z : * . s (s (s (s z))) ;
mul two zero
  : (* -> *) -> * -> *
  = s : * -> * . z : * . z ;
mul two (mul two two)
  : (* -> *) -> * -> *
  = s : * -> * . z : * . s (s (s (s (s (s (s (s z))))))) ;
if_zero zero one two
  : (* -> *) -> * -> *
  = s : * -> * . z : * . s z ;
if_zero one one two
  : (* -> *) -> * -> *
  = s : * -> * . z : * . s (s z) ;
if_zero two one two
  : (* -> *) -> * -> *
  = s : * -> * . z : * . s (s z) ;
if_zero (add (mul four four) one) (mul eight two) (add one (add two one))
  : (* -> *) -> * -> *
  = s : * -> * . z : * . s (s (s (s z))) ;
pair
  : ((* -> *) -> * -> *) -> ((* -> *) -> * -> *) -> (((* -> *) -> * -> *) -> ((* -> *) -> * -> *) -> (* -> *) -> * -> *) -> (* -> *) -> * -> *
  = m : (* -> *) -> * -> * . n : (* -> *) -> * -> * . p : ((* -> *) -> * -> *) -> ((* -> *) -> * -> *) -> (* -> *) -> * -> * . p m n ;
fst
  : ((((* -> *) -> * -> *) -> ((* -> *) -> * -> *) -> (* -> *) -> * -> *) -> (* -> *) -> * -> *) -> (* -> *) -> * -> *
  = p : (((* -> *) -> * -> *) -> ((* -> *) -> * -> *) -> (* -> *) -> * -> *) -> (* -> *) -> * -> * . p (m : (* -> *) -> * -> * . n : (* -> *) -> * -> * . m) ;
snd
  : ((((* -> *) -> * -> *) -> ((* -> *) -> * -> *) -> (* -> *) -> * -> *) -> (* -> *) -> * -> *) -> (* -> *) -> * -> *
  = p : (((* -> *) -> * -> *) -> ((* -> *) -> * -> *) -> (* -> *) -> * -> *) -> (* -> *) -> * -> * . p (m : (* -> *) -> * -> * . n : (* -> *) -> * -> * . n) ;
pair zero one
  : (((* -> *) -> * -> *) -> ((* -> *) -> * -> *) -> (* -> *) -> * -> *) -> (* -> *) -> * -> *
  = p : ((* -> *) -> * -> *) -> ((* -> *) -> * -> *) -> (* -> *) -> * -> * . p (s : * -> * . z : * . z) (s : * -> * . z : * . s z) ;
fst (pair zero one)
  : (* -> *) -> * -> *
  = s : * -> * . z : * . z ;
snd (pair zero one)
  : (* -> *) -> * -> *
  = s : * -> * . z : * . s z ;
