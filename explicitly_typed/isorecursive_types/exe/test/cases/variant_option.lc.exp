Option
  : * => *
  = \A :: * . [None : {}; Some : A] ;
none
  : forall A :: * . Option A
  = \A :: * . [None {} of Option A] ;
some
  : forall A :: * . A -> Option A
  = \A :: * . \x : A . [Some x of Option A] ;
default
  : forall A :: * . A -> (Option A) -> A
  = \A :: * . \x : A . \opt : Option A . case opt of [None _ -> x; Some x -> x] ;
map
  : forall A :: * . forall B :: * . (A -> B) -> (Option A) -> [None : {}; Some : B]
  = \A :: * . \B :: * . \fn : A -> B . \opt : Option A . case opt of [None _ -> [None {} of Option B]; Some x -> [Some (fn x) of Option B]] ;
fold
  : forall A :: * . forall B :: * . (A -> B -> A) -> A -> (Option B) -> A
  = \A :: * . \B :: * . \fn : A -> B -> A . \init : A . \opt : Option B . case opt of [None _ -> init; Some x -> fn init x] ;
