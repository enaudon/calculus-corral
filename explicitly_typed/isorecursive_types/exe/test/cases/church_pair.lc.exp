Pair
  : * => * => *
  = \A :: * . \B :: * . forall C :: * . (A -> B -> C) -> C ;
pair
  : forall A :: * . forall B :: * . A -> B -> forall C :: * . (A -> B -> C) -> C
  = \A :: * . \B :: * . \f : A . \s : B . \C :: * . \p : A -> B -> C . p f s ;
fst
  : forall A :: * . forall B :: * . (Pair A B) -> A
  = \A :: * . \B :: * . \p : Pair A B . p A (\f : A . \s : B . f) ;
snd
  : forall A :: * . forall B :: * . (Pair A B) -> B
  = \A :: * . \B :: * . \p : Pair A B . p B (\f : A . \s : B . s) ;
p
  : forall C :: * . ((forall A :: * . A -> A) -> (forall A :: * . A -> A -> A) -> C) -> C
  = \C :: * . \p : (forall A :: * . A -> A) -> (forall A :: * . A -> A -> A) -> C . p (\A :: * . \x : A . x) (\A :: * . \x : A . \y : A . x) ;
fst forall A :: * . A -> A forall A :: * . A -> A -> A p
  : forall A :: * . A -> A
  = \A :: * . \x : A . x ;
snd forall A :: * . A -> A forall A :: * . A -> A -> A p
  : forall A :: * . A -> A -> A
  = \A :: * . \x : A . \y : A . x ;
