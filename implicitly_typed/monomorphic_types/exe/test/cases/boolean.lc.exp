fls
  : A -> B -> B
  = <value> ;
tru
  : A -> B -> A
  = <value> ;
if
  : (A -> B -> C) -> A -> B -> C
  = <value> ;
pair
  : A -> B -> (A -> B -> C) -> C
  = <value> ;
fst
  : ((A -> B -> A) -> C) -> C
  = <value> ;
snd
  : ((A -> B -> B) -> C) -> C
  = <value> ;
pair fls tru
  : ((A -> B -> B) -> (C -> D -> C) -> E) -> E
  = <value> ;
fst (pair fls tru)
  : A -> B -> B
  = <value> ;
snd (pair fls tru)
  : A -> A -> A
  = <value> ;
